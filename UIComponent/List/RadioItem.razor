@namespace Caspian.UI
@typeparam TValue
@{
    var value = RadioLis.GetValue();
    var className = "t-radio";
    var selected = RadioLis != null && value != null && value.Equals(Value);
    if (Disabled)
        className += " t-disabled";
    if (selected)
        className += " t-selected";
    else
        className += " t-default";
    <span style="@Style" class="@className">
        <span @onclick="OnMouseClick" class="t-icon">
            <input type="radio" class="c-radio-button" />
            @if (selected)
            {
                <span class="c-radio"></span>
            }
        </span>
        @if (!HideTitle)
        {
            <span class="t-title" @onclick="OnMouseClick">@Title</span>
        }
    </span>
}
@code
{
    async void OnMouseClick()
    {
        if (!Disabled)
        {
            await ValueChanged.InvokeAsync(Value);
            await RadioLis.ChangeValueAsync(Value);
        }
    }

    [CascadingParameter(Name = "RadioLis")]
    public IRadioList RadioLis { get; set; }

    [Parameter]
    public TValue Value { get; set; }

    [Parameter]
    public EventCallback<TValue> ValueChanged { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public bool HideTitle { get; set; }

    [Parameter]
    public string Style{ get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    protected override void OnParametersSet()
    {
        if (!Title.HasValue())
        {
            if (typeof(TValue).GetUnderlyingType().IsEnum && Value != null)
                Title = (Value as Enum).FaText();
        }
        base.OnParametersSet();
    }
}

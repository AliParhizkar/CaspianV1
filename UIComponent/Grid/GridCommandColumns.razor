@namespace Caspian.UI
@inject CaspianDataService service
@typeparam TEntity where TEntity : class
@inherits DataCommand<TEntity> 
@{
    (DataView as DataGrid<TEntity>).AddCommandColumn(HeaderTitle, HeaderWidth);
    var disabled = CaspianContainer?.Disabled == true;
    var className = disabled ? "c-icon-disabled" : "";
}
<td class="c-grid-command" @attributes="attrs">
    @if (RowData?.UpsertMode != null)
    {
        <span class="c-check @(className)">
            <span class="t-icon fa fa-check" @onclick="Check"></span>
        </span>
        <span class="c-bar @(className)" @onclick="cancel">
            <span class="t-icon fa fa-ban"></span>
        </span>
    }
    else
    {
        if (!HideEdit)
        {
            <span @onclick="OpenForm" class="@editButtonClassName">
                <span class="t-icon t-edit fa fa-pencil"></span>
            </span>
        }
        if (!HideDelete)
        {
            <span @onclick="DeleteAsync" class="@deleteButtonClassName">
                <span class="t-icon t-delete fa fa-trash"></span>
            </span>
        }
    }
</td>
@code
{
    async Task Check()
    {
        if (CaspianContainer?.Disabled != true)
            await DataView.ValidateAndUpsert(RowData.UpsertMode.Value);
    }

    async Task cancel()
    {
        if (CaspianContainer?.Disabled != true)
            await DataView.CalcelUpsert(RowData.UpsertMode.Value);
    }

    [Parameter]
    public string HeaderTitle { get; set; }

    [CascadingParameter]
    public CaspianContainer CaspianContainer { get; set; }

    [Parameter]
    public string HeaderWidth { get; set; }

    protected override void OnParametersSet()
    {
        if (!HeaderTitle.HasValue())
        {
            if (!HideEdit)
            {
                HeaderTitle = service.Language == Language.Fa ? "ویرایش" : "Edit";
                if (!HideDelete)
                    HeaderTitle += "-";
            }
            if (!HideDelete)
                HeaderTitle += service.Language == Language.Fa ? "حذف" : "Delete";
        }
        if (!HeaderWidth.HasValue())
        {
            if (HideEdit || HideDelete)
                HeaderWidth = "width:55px;";
            else
                HeaderWidth = "width:90px;";
        }
        base.OnParametersSet();
    }
}

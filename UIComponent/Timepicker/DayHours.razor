@namespace Caspian.UI
@{
    string left = null, top = null;
    if (SelectedHour > 0 && SelectedHour < 13)
    {
        left = (itemsLeft[SelectedHour] - 115).ToString().Replace("/", ".");
        top = (itemsTop[SelectedHour] - 115).ToString().Replace("/", ".");
    }
    else
    {
        left = (itemsLeft[SelectedHour] - 115).ToString().Replace("/", ".");
        top = (itemsTop[SelectedHour] - 115).ToString().Replace("/", ".");
    }
}

<div class="c-time-hour">
    <svg width="270" height="270">
        <g transform="translate(135,135)">
            <line x1="0" y1="0" x2="@(left)" y2="@(top)"></line>
            <circle r="5" cx="@(left)" cy="@(top)"></circle>
            <circle r="20" cx="@(left)" cy="@(top)"></circle>
            <circle r="2" cx="0" cy="0"></circle>
        </g>
    </svg>
    @for (var index = 0; index < itemsTop.Length; index++)
    {
        string className = "c-tick";
        var disable = FromHour.HasValue && FromHour.Value > index;
        if (ToHour.HasValue && ToHour.Value < index)
            disable = true;
        if (disable)
            className += " c-tick-disabled";
        if (index > 0 && index <= 12)
            className += " c-tick-inner";

        string str = index == 0 ? "00" : index.ToString();
        int tempIndex = index;
        <div @onclick="async () => await HourSelected(tempIndex) " style="left:@(itemsLeft[index].ToString().Replace('/', '.'))px;top:@(itemsTop[index].ToString().Replace('/', '.'))px;" class="@className">@str</div>
    }
</div>
@namespace Caspian.UI
@{
    var radian = (SelectedMinute - 15) * Math.PI / 30;
    string top = (110 * Math.Sin(radian)).ToString().Replace('/', '.'),
    left = (110 * Math.Cos(radian)).ToString().Replace('/', '.');
}
<div class="c-time-minutes" from="@FromMinute" to="@ToMinute">
    <svg width="270" height="270">
        <g transform="translate(135,135)">
            <line x1="0" y1="0" x2="@left" y2="@top"></line>
            <circle r="5" cx="@left" cy="@top"></circle>
            <circle r="20" cx="@left" cy="@top"></circle>
            <circle r="2" cx="0" cy="0"></circle>
        </g>
    </svg>
    <div class="c-tick-container">
        @for (int index = 0; index < itemsTop.Length; index++)
        {
            int tempIndex = index;
            string str = (tempIndex * 5).ToString();
            if (tempIndex < 2)
            {
                str = "0" + str;
            }
            var disable = FromMinute.HasValue && FromMinute.Value > index * 5;
            if (ToMinute.HasValue && ToMinute.Value < index * 5)
                disable = true;
            string className = "c-tick";
            if (disable)
                className += " c-tick-disabled";
            <div class="@className" style="left:@(itemsLeft[tempIndex].ToString().Replace('/', '.'))px;top:@(itemsTop[tempIndex].ToString().Replace('/', '.'))px">@str</div>
        }
    </div>
</div>

@code 
{
    double[] itemsLeft = new double[] { 115, 170, 210, 225, 210, 170, 115, 60, 19.7372, 5, 19.7372, 60 };
    double[] itemsTop = new double[] { 5, 19.732, 60, 115, 170, 210, 225, 210, 170, 115, 60, 19.7372 };

    [Parameter]
    public int SelectedMinute { get; set; }

    [Parameter]
    public int? FromMinute { get; set; }

    [Parameter]
    public int? ToMinute { get; set; }

    [Parameter]
    public EventCallback<int> SelectedMinuteChanged { get; set; }
}

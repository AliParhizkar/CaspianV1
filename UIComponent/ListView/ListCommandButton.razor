@namespace Caspian.UI
@typeparam TEntity where TEntity : class
@inject IServiceScopeFactory Factory
@inject IJSRuntime jsRuntime
@inherits DataCommand<TEntity> 
@{
    @if (RowData != null)
    {
        if (RowData.UpsertMode.HasValue)
        {
            var className = disabled ? "c-icon-disabled" : "";
            <span class="c-dataview-button">
                <span class="c-check @(className)">
                    <span @onclick="@(async () => await DataView.ValidateAndUpsert(RowData.UpsertMode.Value))" class="t-icon fa fa fa-check"></span>
                </span>
                <span class="c-bar @(className)">
                    <span @onclick="@(async () => await DataView.CalcelUpsert(RowData.UpsertMode.Value))" class="t-icon fa fa fa-ban"></span>
                </span>
            </span>
        }
        else
        {
            if (ButtonType == CommandButtonType.Default || ButtonType == null)
            {
                <MessageBox @ref="MessageBox" />
                <span class="c-dataview-button">
                    <button class="c-btn c-primary" @onclick="OpenForm">
                        <span>Edit</span>
                        <span class="t-icon fa fa-pencil"></span>
                    </button>
                    <button class="c-btn c-danger" @onclick="RemoveAsync">
                        <span>Delete</span>
                        <span class="t-icon fa fa-trash"></span>
                    </button>
                </span>
            }
            else if(ButtonType == CommandButtonType.Simple)
            {
                <span class="c-grid-command">
                    <span class="t-grid-edit">
                        <span class="t-icon t-edit fa fa-pencil" @onclick="OpenForm"></span>
                    </span>
                    <span class="t-grid-delete">
                        <span class="t-icon t-delete fa fa-trash" @onclick="DeleteAsync"></span>
                    </span>
                </span>
            }
        }
    }
}

@code 
{


}

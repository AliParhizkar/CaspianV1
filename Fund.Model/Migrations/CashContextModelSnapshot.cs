// <auto-generated />
using System;
using Fund.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fund.Model.Migrations
{
    [DbContext(typeof(CashContext))]
    partial class CashContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Caspian.Engine.Model.ExceptionData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ErrorFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("LineNumber")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<short>("RepetitionTimes")
                        .HasColumnType("smallint");

                    b.Property<string>("SourceCodeFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("SubSystemKind")
                        .HasColumnType("tinyint");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExceptionsData", "cmn");
                });

            modelBuilder.Entity("Caspian.Engine.Model.ExceptionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExceptionDataId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExceptionDataId");

                    b.HasIndex("UserId");

                    b.ToTable("ExceptionDetails", "cmn");
                });

            modelBuilder.Entity("Caspian.Engine.Model.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("InvalidAddress")
                        .HasColumnType("bit");

                    b.Property<int?>("MenuCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Ordering")
                        .HasColumnType("int");

                    b.Property<bool>("ShowonMenu")
                        .HasColumnType("bit");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("SubSystemKind")
                        .HasColumnType("tinyint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuCategoryId");

                    b.ToTable("Menus", "cmn");
                });

            modelBuilder.Entity("Caspian.Engine.Model.MenuAccessibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("MenusAccessibility", "cmn");
                });

            modelBuilder.Entity("Caspian.Engine.Model.MenuCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IconFont")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ordering")
                        .HasColumnType("int");

                    b.Property<byte>("SubSystemKind")
                        .HasColumnType("tinyint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MenuCategories", "cmn");
                });

            modelBuilder.Entity("Caspian.Engine.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles", "cmn");
                });

            modelBuilder.Entity("Caspian.Engine.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", "cmn");
                });

            modelBuilder.Entity("Caspian.Engine.Model.UserMembership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersMembership", "cmn");
                });

            modelBuilder.Entity("Fund.Model.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountHolderId")
                        .HasColumnType("int");

                    b.Property<int>("CashBoxTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("FloorLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsReferenceCashBox")
                        .HasColumnType("bit");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("AccountHolderId")
                        .IsUnique();

                    b.HasIndex("CashBoxTypeId")
                        .IsUnique();

                    b.ToTable("Accounts", "Cash");

                    b.HasDiscriminator<byte>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Fund.Model.AccountHolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Code")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("AccountHolders", "Cash");

                    b.HasDiscriminator<byte>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Fund.Model.CashBoxType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("Code")
                        .HasColumnType("bigint");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("InternationalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId")
                        .IsUnique();

                    b.ToTable("CashBoxTypes", "Cash");
                });

            modelBuilder.Entity("Fund.Model.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Currencies", "Cash");
                });

            modelBuilder.Entity("Fund.Model.CashBox", b =>
                {
                    b.HasBaseType("Fund.Model.Account");

                    b.Property<byte?>("TellerType")
                        .HasColumnType("tinyint");

                    b.HasDiscriminator().HasValue((byte)1);
                });

            modelBuilder.Entity("Fund.Model.Leakage", b =>
                {
                    b.HasBaseType("Fund.Model.Account");

                    b.HasDiscriminator().HasValue((byte)3);
                });

            modelBuilder.Entity("Fund.Model.Over", b =>
                {
                    b.HasBaseType("Fund.Model.Account");

                    b.HasDiscriminator().HasValue((byte)4);
                });

            modelBuilder.Entity("Fund.Model.Treasury", b =>
                {
                    b.HasBaseType("Fund.Model.Account");

                    b.HasDiscriminator().HasValue((byte)2);
                });

            modelBuilder.Entity("Fund.Model.Cashier", b =>
                {
                    b.HasBaseType("Fund.Model.AccountHolder");

                    b.HasDiscriminator().HasValue((byte)1);
                });

            modelBuilder.Entity("Fund.Model.Treasurer", b =>
                {
                    b.HasBaseType("Fund.Model.AccountHolder");

                    b.HasDiscriminator().HasValue((byte)2);
                });

            modelBuilder.Entity("Caspian.Engine.Model.ExceptionDetail", b =>
                {
                    b.HasOne("Caspian.Engine.Model.ExceptionData", "ExceptionData")
                        .WithMany("Details")
                        .HasForeignKey("ExceptionDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Caspian.Engine.Model.User", "User")
                        .WithMany("ExceptionDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExceptionData");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Caspian.Engine.Model.Menu", b =>
                {
                    b.HasOne("Caspian.Engine.Model.MenuCategory", "MenuCategory")
                        .WithMany("Menus")
                        .HasForeignKey("MenuCategoryId");

                    b.Navigation("MenuCategory");
                });

            modelBuilder.Entity("Caspian.Engine.Model.MenuAccessibility", b =>
                {
                    b.HasOne("Caspian.Engine.Model.Menu", "Menu")
                        .WithMany("Accessibilities")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Caspian.Engine.Model.Role", "Role")
                        .WithMany("MenuAccessibilities")
                        .HasForeignKey("RoleId");

                    b.HasOne("Caspian.Engine.Model.User", "User")
                        .WithMany("Accessibilities")
                        .HasForeignKey("UserId");

                    b.Navigation("Menu");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Caspian.Engine.Model.UserMembership", b =>
                {
                    b.HasOne("Caspian.Engine.Model.Role", "Role")
                        .WithMany("Memberships")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Caspian.Engine.Model.User", "User")
                        .WithMany("Memberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Fund.Model.Account", b =>
                {
                    b.HasOne("Fund.Model.AccountHolder", "AccountHolder")
                        .WithOne()
                        .HasForeignKey("Fund.Model.Account", "AccountHolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fund.Model.CashBoxType", "CashBoxType")
                        .WithOne()
                        .HasForeignKey("Fund.Model.Account", "CashBoxTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountHolder");

                    b.Navigation("CashBoxType");
                });

            modelBuilder.Entity("Fund.Model.AccountHolder", b =>
                {
                    b.HasOne("Caspian.Engine.Model.User", "User")
                        .WithOne()
                        .HasForeignKey("Fund.Model.AccountHolder", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Fund.Model.CashBoxType", b =>
                {
                    b.HasOne("Fund.Model.Currency", "Currency")
                        .WithOne()
                        .HasForeignKey("Fund.Model.CashBoxType", "CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Caspian.Engine.Model.ExceptionData", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("Caspian.Engine.Model.Menu", b =>
                {
                    b.Navigation("Accessibilities");
                });

            modelBuilder.Entity("Caspian.Engine.Model.MenuCategory", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Caspian.Engine.Model.Role", b =>
                {
                    b.Navigation("Memberships");

                    b.Navigation("MenuAccessibilities");
                });

            modelBuilder.Entity("Caspian.Engine.Model.User", b =>
                {
                    b.Navigation("Accessibilities");

                    b.Navigation("ExceptionDetails");

                    b.Navigation("Memberships");
                });
#pragma warning restore 612, 618
        }
    }
}

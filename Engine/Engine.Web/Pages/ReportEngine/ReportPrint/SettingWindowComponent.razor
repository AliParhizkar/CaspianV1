@namespace Caspian.Engine.ReportPrint
@inject IJSRuntime jSRuntime
<Window @bind-Status="Status" Style="width:400px;" Id="newEditForm">
    <Content>
        <div style="width:90%;margin:5px auto">
            <table style="width:100%;">
                <tr>
                    <td>
                        <label>اندازه</label>
                    </td>
                    <td>
                        <DropdownList Id="PageType" @bind-Value="Setting.PageType" OnValueChange="SetPageSize" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <label>عرض صفحه</label>
                    </td>
                    <td>
                        <NumericTextBox Id="PageWidth" @bind-Value="Setting.PageWidth" Disabled="Setting.PageType != ReportPageType.Custome" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <label>ارتفاع صفحه</label>
                    </td>
                    <td>
                        <NumericTextBox Id="PageHeight" @bind-Value="Setting.PageHeight" Disabled="Setting.PageType != ReportPageType.Custome" />
                    </td>

                </tr>
            </table>
            <table style="width:100%">
                @if (!IsWorkflowReport)
                {
                    <tr>
                        <td style="width:30px">
                            <CheckBox Id="ReportTitle" @bind-Value="Setting.ReportTitle" />
                        </td>
                        <td colspan="2">
                            <label>سرگزارش</label>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <CheckBox Id="PageHeader" @bind-Value="Setting.PageHeader" />
                        </td>
                        <td colspan="2">
                            <label>سرصفحه</label>
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td style="width:78px;">
                            <label>نوع چاپ</label>
                        </td>
                        <td style="padding:0">
                            <DropdownList Id="PrintOn" @bind-Value="Setting.PrintOn" Disabled="!Setting.PageHeader" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <CheckBox Id="DataHeader" @bind-Value="Setting.DataHeader" />
                        </td>
                        <td colspan="2">
                            <label>سرداده</label>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <CheckBox Id="DataFooter" @bind-Value="Setting.DataFooter" />
                        </td>
                        <td colspan="2">
                            <label>ته داده</label>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <CheckBox Id="PageFooter" @bind-Value="Setting.PageFooter" />
                        </td>
                        <td colspan="2">
                            <label>ته صفحه</label>
                        </td>
                    </tr>
                }
                <tr>
                    <td></td>
                    <td></td>
                    <td style="text-align:center;">
                        <button @onclick="async () => { await StatusChanged.InvokeAsync(WindowStatus.Close); }" class="c-btn c-danger">انصراف</button>
                        <button @onclick="SetPageSetting" class="c-btn c-primary">ثبت</button>
                    </td>
                </tr>
            </table>
        </div>
    </Content>
</Window>
@code
{
    bool updateSetting;
    string message;

    [Parameter]
    public ReportSetting Setting { get; set; }

    [Parameter]
    public bool IsWorkflowReport{ get; set; }

    [Parameter]
    public WindowStatus Status { get; set; }

    [Parameter]
    public EventCallback<WindowStatus> StatusChanged { get; set; }

    void SetPageSetting()
    {
        if (Setting.PageType.GetValueOrDefault() == 0 || Setting.PageType.Value == ReportPageType.Custome && (Setting.PageWidth <= 0 || Setting.PageHeight <= 0))
        {
            message = "لطفا اندازه صفحه را مشخص نمایید";
        }
        else
        {
            updateSetting = true;
            Status = WindowStatus.Close;
        }

    }

    void SetPageSize()
    {
        if (Setting.PageType.HasValue)
        {
            var size = Setting.PageSetting(Setting.PageType.Value);
            Setting.PageWidth = size.PageWidth;
            Setting.PageHeight = size.PageHeight;
        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (message.HasValue())
        {
            await jSRuntime.InvokeVoidAsync("$.caspian.showMessage", message);
            message = null;
        }
        if (updateSetting)
        {
            var json = System.Text.Json.JsonSerializer.Serialize(Setting);
            await jSRuntime.InvokeVoidAsync("$.report.addBonds", json);
        }
        updateSetting = false;
        await base.OnInitializedAsync();
    }

}

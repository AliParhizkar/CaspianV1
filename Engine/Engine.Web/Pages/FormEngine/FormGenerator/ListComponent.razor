@namespace Caspian.Engine.FormGenerator

@inject IJSRuntime JSRuntime
<Window Status="Status" Style="width:500px" Title="@(Control.FormControlType == FormControlType.DropdownList ? "لیست فروافتادنی" : "لیست انتخابی")">
    <Content>
        <table style="width:90%;margin:0 auto;">
            <tr>
                <td><label>عنوان</label></td>
                <td>
                    <StringTextBox @bind-Value="Control.Text" />
                </td>
            </tr>
            <tr>
                <td><label>اجبار داده</label></td>
                <td>
                    <CheckBox @bind-Value="Control.IsRequired" />
                </td>
            </tr>
            @if (Control.FormControlType == FormControlType.CheckListBox)
            {
                <tr>
                    <td><label>چند انتخابی</label></td>
                    <td>
                        <CheckBox @bind-Value="Control.MultiSelect" />
                    </td>
                </tr>
            }
            <tr>
                <td><label>عناصر</label></td>
                <td>
                    <StringTextBox @bind-Value="items" MultiLine Rows="12" />
                </td>
            </tr>
            <tr>
                <td></td>
                <td style="height:60px;text-align:center"> 
                    <button style="width:60px;margin-left:10px;" class="c-btn c-primary" value="ثبت" @onclick="Update">ثبت</button>
                    <button style="width:60px" class="c-btn c-danger" value="انصراف" @onclick="async () => { await StatusChanged.InvokeAsync(WindowStatus.Close); }">انصراف</button>
                </td>
            </tr>
        </table>
    </Content>
</Window>

@code
{
    string items;
    bool isUpdated;
    string message;

    async void Update()
    {
        if (!Control.Text.HasValue())
            message = "لطفا عنوان کنترل را مشخص نمایید";
        else if (!items.HasValue())
            message = "کنترل لیست حداقل باید دو آیتم داشته باشد";
        else
        {
            Control.Items = items.Split('\n').Where(t => t.HasValue()).ToList();
            if (Control.Items.Count < 2)
                message = "کنترل لیست حداقل باید دو آیتم داشته باشد";
            else
            {
                isUpdated = true;
                await StatusChanged.InvokeAsync(WindowStatus.Close);
            }
        }
    }

    [Parameter]
    public WindowStatus Status { get; set; }

    [Parameter]
    public EventCallback<WindowStatus> StatusChanged { get; set; }

    [Parameter]
    public FormControl Control { get; set; }

    protected override Task OnParametersSetAsync()
    {
        items = null;
        if (Control.Items != null)
        {
            foreach(var item in Control.Items)
            {
                if (items.HasValue())
                    items += '\n';
                items += item;
            }
        }
        return base.OnParametersSetAsync();
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (message.HasValue())
        {
            await JSRuntime.InvokeVoidAsync("$.telerik.showMessage", message);
            message = null;
        }
        if (isUpdated)
        {
            await JSRuntime.InvokeVoidAsync("$.form.updateList", Control);
            isUpdated = false;
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}

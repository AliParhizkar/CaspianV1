@page "/{Subsystem}/Engine/DynamicParameter"
@namespace Caspian.Engine.WorkflowEngine
@using Caspian.common
@inherits SimplePage<DynamicParameter>
@{
    
    base.BuildRenderTree(__builder);
}
<div style="width:90%;margin:5px auto">
    <div>
        <table style="width:90%;margin:10px auto;">
            <tr>
                <td style="width:120px;">
                    <label>روش محاسبه</label>
                </td>
                <td>
                    <DropdownList @bind-Value="SearchData.CalculationType" />
                </td>
            </tr>
        </table>
    </div>
    <DataGrid @ref="CrudGrid" TEntity="DynamicParameter" Search="SearchData">
        <Columns Context="con" >
            <GridColumn TEntity="DynamicParameter" Field="t => t.EntityName">
                <Template>
                    <span>@(entities.Single(t => t.Value == con.Data.EntityName).Text)</span>
                </Template>
            </GridColumn>
            <GridColumn TEntity="DynamicParameter" Field="t => t.FaTitle" />
            <GridColumn TEntity="DynamicParameter" Field="t => t.ControlType.FaText()" style="width:120px;" />
            <GridColumn TEntity="DynamicParameter" Field="t => t.CalculationType.FaText()" />
            <GridColumn TEntity="DynamicParameter" Field="t => t.DecimalNumber" />
            <GridColumn TEntity="DynamicParameter" Field="t => t.Priority" style="width:50px" />
            <GridColumn TEntity="DynamicParameter" Title="بررسی" style="width:50px">
                <Template>
                    <button style="border-radius:50%;margin-right:0" class="c-btn c-primary" @onclick="async () => await SetPriority(con.Data.Id)" @onclick:stopPropagation @onclick:preventDefault>
                        <i class="fa fa-check"></i>
                    </button>
                </Template>
            </GridColumn>
            <GridColumn TEntity="DynamicParameter" Title="مقادیر" style="width:50px">
                <Template>
                    @if (con.Data.ControlType == ControlType.DropdownList)
                    {
                        <IconButton disabled="disabled" Href='@($"/Engine/Workflow/DynamicParameterOption/{con.Data.Id}")' IconType="IconType.Wpforms" />
                    }
                    @if (con.Data.CalculationType == CalculationType.FormData)
                    {
                        <IconButton disabled="disabled" Href='@($"/Engine/DataParameterValue/{con.Data.Id}")' IconType="IconType.Wpforms" />
                    }
                </Template>
            </GridColumn>
            <GridColumn  TEntity="DynamicParameter" Field="t => t.CalculationType" Title="ایجاد" style="width:50px">
                <Template>
                    @if (con.Data.CalculationType == CalculationType.FormData)
                    {
                        <IconButton disabled="disabled" Href='@($"/Engine/DataParameter/{con.Data.Id}")' IconType="IconType.Wpforms" />
                    }
                </Template>
            </GridColumn>
            <GridCommandColumns TEntity="DynamicParameter" />
        </Columns>
    </DataGrid>
    <Window @ref="UpsertWindow" Title="تعریف پارامتر" Style="width:450px"
            OnOpen="() =>
                    {
                        if (UpsertData.Id == 0)
                        {
                            UpsertData.CalculationType = CalculationType.UserData;
                            UpsertData.SubSystem = systemKind;
                        }
                    }">
        <Content>
            <CaspianForm @ref="UpsertForm" Model="UpsertData">
                <CaspianValidationValidator ValidatorType="typeof(DynamicParameterService)" />
                <table style="width:90%;margin:0 auto">
                    <tr>
                        <td>
                            <label>نظام پرداخت حقوق</label>
                        </td>
                        <td>
                            <ComboBox TValue="string" TEntity="SelectListItem" @bind-Value="UpsertData.EntityName" Source="entities" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>عنوان فارسی پارامتر</label>
                        </td>
                        <td>
                            <StringTextBox @bind-Value="UpsertData.FaTitle" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>عنوان لاتین پارامتر</label>
                        </td>
                        <td>
                            <StringTextBox Style="direction:ltr" @bind-Value="UpsertData.EnTitle" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>روش محاسبه</label>
                        </td>
                        <td>
                            <RadioList Style="width:100%" @bind-Value="UpsertData.CalculationType" />
                        </td>
                    </tr>
                    
                    @if (UpsertData.CalculationType == CalculationType.UserData)
                    {
                        <tr>
                            <td>
                                <label>نوع کنترل</label>
                            </td>
                            <td>
                                <DropdownList @bind-Value="UpsertData.ControlType" EnumItems="ControlsType" />
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td>
                                <label>نوع خروجی</label>
                            </td>
                            <td>
                                <DropdownList @bind-Value="UpsertData.ResultType" />
                            </td>
                        </tr>
                    }
                    @if (UpsertData.CalculationType == CalculationType.UserData && UpsertData.ControlType == ControlType.Numeric || UpsertData.CalculationType != CalculationType.UserData && UpsertData.ResultType == ResultType.Numeric)
                    {
                        <tr>
                            <td>
                                <label>تعداد ارقام اعشار</label>
                            </td>
                            <td>
                                <NumericTextBox @bind-Value="UpsertData.DecimalNumber" />
                            </td>
                        </tr>
                    }
                    <tr>
                        <td></td>
                        <td style="text-align:center">
                            <FormCommandButton />
                        </td>
                    </tr>
                </table>
            </CaspianForm>
        </Content>
    </Window>
</div>

@code
{
    SubSystemKind systemKind;
    IList<SelectListItem> entities;
    IList<ControlType?> ControlsType;

    protected override void OnInitialized()
    {
        systemKind = (SubSystemKind)typeof(SubSystemKind).GetField(SubSystem).GetValue(null);
        using var scope = CreateScope();
        var service = new DynamicParameterService(scope);
        entities = service.GetDynamicType(systemKind);
        ControlsType = new List<ControlType?>();
        ControlsType.AddRange(ControlType.Integer, ControlType.Numeric, ControlType.CheckBox, ControlType.DropdownList);
        base.OnInitialized();
    }

    async Task SetPriority(int id)
    {
        var scope = CreateScope();
        var service = new DynamicParameterService(scope);
        var param = await service.GetAll().Include(t => t.ResultParameters).Include("ResultParameters.DynamicParameter")
            .Include("ResultParameters.Rule").SingleAsync(id);
        param.Priority = service.CalculatePriority(param);
        await service.SaveChangesAsync();
        await CrudGrid.Reload();
    }

    [Parameter]
    public string SubSystem { get; set; }
}
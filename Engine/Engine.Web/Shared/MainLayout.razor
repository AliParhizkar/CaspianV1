@inherits LayoutComponentBase
@namespace Caspian.Engine.Shared
@implements IDisposable
@inject NavigationManager NavigationManager

<div class="main">
    <div class="content">
        @if (HttpContext.Request.Path.StartsWithSegments("/Account/Login"))
        {
            @Body
        }
        else 
        {
            <CaspianExceptionComponent SystemKind="SubSystemKind.Engine" UserId="userId">
                @Body
            </CaspianExceptionComponent>
        }
    </div>
</div>


@code
{
    int userId;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; }

    [CascadingParameter]
    public Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (authenticationStateTask != null)
        {
            var result = await authenticationStateTask;
            if (result.User.Identity?.IsAuthenticated == true)
            {
                var claim = result.User.Claims.FirstOrDefault()?.Value;
                if (claim.HasValue())
                    userId = Convert.ToInt32(result.User.Claims.FirstOrDefault()?.Value);
            }
        }
        await base.OnParametersSetAsync();
    }

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += NavigationManager_LocationChanged;
        base.OnInitialized();
    }

    void NavigationManager_LocationChanged(object sender, LocationChangedEventArgs e)
    {

    }

    void IDisposable.Dispose()
    {
        // Unsubscribe from the event when our component is disposed
        NavigationManager.LocationChanged -= NavigationManager_LocationChanged;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }
}

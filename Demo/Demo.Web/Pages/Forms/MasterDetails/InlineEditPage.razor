@page "/Demo/MaterialReceipt"
@page "/Demo/MaterialReceipt/{MasterId:int}"
@namespace Demo.Web.Pages
@inherits MasterDetailPage<StoreHouseReceipt, MaterialReceipt>
<div class="row p-3">
    <div class="col-md-3">

    </div>
    <div class="col-md-9">

    </div>
</div>
<div style="margin:10px auto; width:97%;display:flex">
    <div style="width:300px;margin:22px 0 0 25px;">
        <CaspianForm @ref="MasterForm" Model="UpsertData">
            <CaspianValidationValidator ValidatorType="typeof(StoreHouseReceiptService)" />
            <table style="width:100%">
                <tr>
                    <td>
                        <label>تاریخ حواله</label>
                    </td>
                    <td>
                        <DatePicker @bind-Value="UpsertData.Date" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <label>انبار</label>
                    </td>
                    <td>
                        <ComboBox TValue="int" TEntity="StoreHouse" @bind-Value="UpsertData.StoreHouseId" TextExpression="t => t.Title"  />
                    </td>
                </tr>
                <tr>
                    <td>توضیحات</td>
                    <td>
                        <StringTextBox @bind-Value="UpsertData.Comment" MultiLine Rows="3" />
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td>
                        <FormCommandButton />
                    </td>
                </tr>
            </table>
        </CaspianForm>
    </div>
    <div style="width:calc(100% - 300px)">
        <DataGrid @ref="Grid" TEntity="MaterialReceipt" TableHeight="400" Inline Batch AutoHide ConditionExpr="t => t.ReceiptId == MasterId">
            <Columns Context="con">
                <GridColumn Field="t => t.Material.Title" Title="محصول">
                    <EditTemplate>
                        <AutoComplete TValue="int" TEntity="Material" @bind-Value="con.Data.MaterialId" HideHeader AutoHide
                                      TextExpression="t => t.Title" Title="محصول"
                                      OnChange="async () =>
                                            {
                                                await UpdateMaterialReceipt(con.Data.MaterialId, con.Data);
                                            }">
                            <MaterialLookupPage TValue="int" />
                        </AutoComplete>
                    </EditTemplate>
                </GridColumn>
                <GridColumn Field="t => t.QuantityMain" style="width:80px">
                    <EditTemplate>
                        <NumericTextBox @ref="txtMainUnit" @onkeyup="async e =>  await MainUnitChanged(e, con.Data, con.UpsertMode.Value)" @bind-Value="con.Data.QuantityMain" />
                    </EditTemplate>
                </GridColumn>
                <GridColumn Field="t => t.Material.MainUnit.Title" Title="واحد اصلی" style="width:100px">
                    <Template>
                        <span>@(con.Data?.Material?.MainUnit?.Title)</span>
                    </Template>
                </GridColumn>
                <GridColumn Field="t => t.QuantitySub" style="width:80px">
                    <EditTemplate>
                        @if (con.Data?.Material?.SubunitId != null)
                        {
                            <NumericTextBox @ref="txtSubunit" @onkeyup="async e =>  await SubUnitChanged(e, con.Data, con.UpsertMode.Value)" @bind-Value="con.Data.QuantitySub" />
                        }
                    </EditTemplate>
                </GridColumn>
                <GridColumn Field="t => t.Material.Subunit.Title" Title="واحد فرعی" style="width:80px">
                    <Template>
                        <span>@(con.Data?.Material?.Subunit?.Title)</span>
                    </Template>
                </GridColumn>
                <GridColumn Field="t => t.Material.SubunitId" Title="" style="display:none;width:0" />
                <GridCommandColumns/>
            </Columns>
        </DataGrid>
    </div>
</div>

@code
{
    NumericTextBox<int> txtMainUnit;
    NumericTextBox<int?> txtSubunit;
    protected override Task OnMasterEntityCreatedAsync()
    {
        if (UpsertData.Id == 0)
            UpsertData.Date = DateTime.Now.Date;
        return base.OnMasterEntityCreatedAsync();
    }

    async Task MainUnitChanged(KeyboardEventArgs e, MaterialReceipt receipt, UpsertMode mode)
    {
        if (e.Key == "Enter" || e.Key == "NumpadEnter")
        {
            if (receipt?.Material.SubunitId != null)
                await txtSubunit.FocusAsync();
            else
                await Grid.ValidateAndUpsert(mode);
        }
    }

    async Task SubUnitChanged(KeyboardEventArgs e, MaterialReceipt receipt, UpsertMode mode)
    {
        if (e.Key == "Enter" || e.Key == "NumpadEnter")
            await Grid.ValidateAndUpsert(mode);
    }

    async Task UpdateMaterialReceipt(int materialId, MaterialReceipt materialReceipt)
    {
        if (materialId > 0)
        {
            using var scope = CreateScope();
            materialReceipt.Material = await new MaterialService(scope.ServiceProvider).GetAll().Where(t => t.Id == materialId)
                .Include(t => t.MainUnit).Include(t => t.Subunit).SingleAsync();
            await txtMainUnit.FocusAsync();

        }
    }
}
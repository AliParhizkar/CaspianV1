@page "/Demo/Order"
@page "/Demo/Order/{MasterId:int}"
@namespace Demo.Web.Pages

@inherits MasterDetailPage<Order, OrderDeatil>
<div style="margin:20px auto; width:95%;display:flex">
    <div style="width:400px;padding-left:50px">
        <h7 style="color:gray;padding-right:10px">سفارش</h7>
        <a href="/Demo/Orders">
            <span class="fa fa-first-order"></span>
        </a>

        <hr />
        <CaspianForm @ref="MasterForm" Model="UpsertData" >
            <CaspianValidationValidator ValidatorType="typeof(OrderService)" />
            <table style="width:100%;margin:0 auto;height:220px;">
                <tr>
                    <td><label>تاریخ سفارش</label></td>
                    <td>
                        <DatePicker @bind-Value="UpsertData.Date" />
                    </td>
                </tr>
                <tr>
                    <td><label>نوع سفارش</label></td>
                    <td>
                        <DropdownList @bind-Value="UpsertData.OrderType" />
                    </td>
                </tr>
                <tr>
                    <td><label>مشتری</label></td>
                    <td>
                        <ComboBox TEntity="Customer" TValue="int?" @bind-Value="UpsertData.CustomerId" TextExpression="@(t => t.CustomerType == CustomerType.Real ? t.FName + " " + t.LName : t.CompanyName)" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <label>پیک</label>
                    </td>
                    <td>
                        <ComboBox TValue="int?" TEntity="Delivery" @bind-Value="UpsertData.DeliveryId" TextExpression="@(t => t.FName + " " + t.LName + "-" + t.Code)" />
                    </td>
                </tr>
                <tr>
                    <td style="text-align:center" colspan="2">
                        <label>توضیحات</label>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <StringTextBox @bind-Value="UpsertData.Description" MultiLine Rows="8" />
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td style="text-align:center">
                        <FormCommandButton />
                    </td>
                </tr>
            </table>
        </CaspianForm>
    </div>
    <div style="width:calc(100% - 400px)">
        <h7 style="color:gray;padding-right:10px">اقلام سفارش</h7>
        <hr />
        <DataGrid @ref="Grid" TEntity="OrderDeatil" TableHeight="350" Inline Batch ConditionExpr="t => t.OrderId == MasterId">
            <Columns Context="con">
                <GridColumn Field="t => t.Product.Title" Title="محصول">
                    <EditTemplate>
                        <AutoComplete TValue="int" TEntity="Product" @bind-Value="con.Data.ProductId" HideHeader AutoHide
                                      TextExpression="t => t.Title" Title="محصول"
                                      OnChange="async () => await SetPrice(con.Data)">

                                      <ProductLookupPage TValue="int" />

                        </AutoComplete>                    
                    </EditTemplate>
                </GridColumn>
                <GridColumn Field="t => t.Price.Seprate3Digit()">
                    <EditTemplate>
                        <span>@(con.Data.Price.Seprate3Digit())</span>
                    </EditTemplate>
                </GridColumn>
                <GridColumn Field="t => t.Count">
                    <EditTemplate>
                        <NumericTextBox @ref="txtPrice" @bind-Value="con.Data.Count"
                                        @onkeyup="@(async e => await UpsertOnEnter(e, con.UpsertMode.Value))" />
                    </EditTemplate>
                </GridColumn>
                <GridCommandColumns/>
            </Columns>
        </DataGrid>
    </div>
</div>

@code 
{
    int myTemoId;
    NumericTextBox<int> txtPrice;
    AutoComplete<Product, int> txtProduct;

    protected override async Task OnMasterEntityCreatedAsync()
    {
        if (UpsertData.Id == 0)
            UpsertData.Date = DateTime.Now.Date;
        await base.OnMasterEntityCreatedAsync();
    }

    async Task UpsertOnEnter(KeyboardEventArgs e, UpsertMode mode)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
            await Grid.ValidateUpsert(mode);
    }

    
    async Task SetPrice(OrderDeatil detail)
    {
        if (detail.ProductId > 0)
        {
            var scope = CreateScope();
            var old = await new ProductService(scope.ServiceProvider).SingleAsync(detail.ProductId);
            detail.Price = old.Price;
            if (detail.Count == 0)
                detail.Count = 1;
            txtPrice.Focus();
        }
    }
}
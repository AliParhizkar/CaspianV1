@page "/Demo/Product/{CategoryId:int}"
@namespace Demo.Web.Pages
@inherits SimplePage<Product>
@{
    base.BuildRenderTree(__builder);
}
<div style="width:90%;margin:5px auto">
    <table style="width:100%">
        <tr>
            <td>
                <label>عنوان</label>
            </td>
            <td>
                <StringTextBox @bind-Value="SearchData.Title" />
            </td>
        </tr>
    </table>
    <DataGrid @ref="CrudGrid" TEntity="Product" ConditionExpr="@(t => t.ProductCategoryId == CategoryId)" Search="SearchData">
        <Columns>
            <GridColumn Field="t => t.Title" />
            <GridColumn Field="t => t.Price.Seprate3Digit()" />
            <GridColumn Field="t => t.PriceOuterBound.Seprate3Digit()" />
            <GridColumn Field="t => t.ActiveType.ToString()">
                <Template>
                    <CheckBox TValue="bool" Value="context.Data.ActiveType == ActiveType.Enable"
                              ValueChanged="async () =>
                                        {
                                            await TogleEnable(context.Data.Id);
                                        }" />
                </Template>
            </GridColumn>
            <GridCommandColumns/>
        </Columns>
    </DataGrid>
    <Window @ref="UpsertWindow" Title="محصول" Style="width:800px">
        <Content>
            <CaspianForm @ref="UpsertForm" Model="UpsertData" OnValidSubmit="showConfirmForPrice"
                         OnSubmit="() =>
                                   {
                                       UpsertData.ProductCategoryId = CategoryId;
                                   }">
                <CaspianValidationValidator ValidatorType="typeof(ProductService)" />
                <table style="width:95%;margin:0 auto">
                    <tr>
                        <td>
                            <label>عنوان</label>
                        </td>
                        <td>
                            <StringTextBox @bind-Value="UpsertData.Title" />
                        </td>
                        <td colspan="2" rowspan="5">
                            <Fileupload OnChange="async e =>
                                                  {
                                                      UpsertData.Image = await e.File.GetByteArrayAsync();
                                                  }">
                                <PictureBox Data="UpsertData.Image" style="width:250px;height:250px" />
                            </Fileupload>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>قیمت</label>
                        </td>
                        <td>
                            <NumericTextBox @bind-Value="UpsertData.Price"
                                            OnChange="@(() =>
                                                                 {
                                                                     if (UpsertData.PriceOuterBound == 0)
                                                                         UpsertData.PriceOuterBound = UpsertData.Price;
                                                                 })" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>قیمت بیرون بر</label>
                        </td>
                        <td>
                            <NumericTextBox @bind-Value="UpsertData.PriceOuterBound" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>وعده های غذایی</label>
                        </td>
                        <td>
                            <MultiSelectBox @bind-Value="UpsertData.Meal" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>وضعیت</label>
                        </td>
                        <td>
                            <DropdownList @bind-Value="UpsertData.ActiveType" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>تخفیف پذیر</label>
                        </td>
                        <td>
                            <CheckBox @bind-Value="UpsertData.Discountable" />
                        </td>
                        <td colspan="2">
                            <FormCommandButton />
                        </td>
                    </tr>
                </table>
            </CaspianForm>
        </Content>
    </Window>
</div>
@code
{
    int? categoryId;

    [Parameter]
    public int CategoryId { get; set; }

    void SetCategory()
    {
        UpsertData.ProductCategoryId = CategoryId;
    }

    async Task<bool> showConfirmForPrice(EditContext context)
    {
        return (UpsertData.Price > 0 || (await Confirm("آیا با ثبت محصول با مبلغ صفر موافقید؟")));
    }

    async Task TogleEnable(int id)
    {
        using var scope = ServiceScopeFactory.CreateScope();
        var service = new ProductService(scope.ServiceProvider);
        await service.ToggleEnable(id);
        await service.SaveChangesAsync();
        await CrudGrid.Reload();
    }
}
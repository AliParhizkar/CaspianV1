@page "/Demo/SimpleDisterbuted"
@namespace Demo.Web.Pages
@inherits SimplePage<Product>
@{
    base.BuildRenderTree(__builder);
}
@if (categories != null)
{
    <div style="display:flex">
        <div class="c-categories">
            <ul>
                @foreach (var category in categories)
                {
                    var className = "c-category";
                    if (selectedId == category.Id)
                        className += " c-selected";
                    <li class="@className"
                        @onclick="() =>
                        {
                            selectedId = category.Id;
                            CrudGrid?.EnableLoading();
                        }">@category.Title
                    </li>
                }
            </ul>
        </div>

        @if (selectedId.HasValue)
        {
            <div class="c-products">
                <DataGrid @ref="CrudGrid" TEntity="Product" ConditionExpr="@(t => t.ProductCategoryId == selectedId.Value)" Search="SearchData"
                          TableHeight="350">
                    <Columns>
                        <GridColumn Field="t => t.Title" />
                        <GridColumn Field="t => t.ActiveType.FaText()" />
                        <GridColumn Field="t => t.Price.ToString()" />
                        <GridColumn Field="t => t.TakeoutPrice.ToString()" />
                        <GridCommandColumns/>
                    </Columns>
                </DataGrid>
                <Window @ref="UpsertWindow" Title="محصول" Style="width:680px;">
                    <Content>
                        <CaspianForm @ref="UpsertForm" Model="UpsertData"
                                     OnSubmit="() =>
                                                {
                                                    UpsertData.ProductCategoryId = selectedId.Value;
                                                }">
                            <CaspianValidationValidator ValidatorType="typeof(ProductService)" />
                            <table style="width:95%;margin:0 auto">
                                <tr>
                                    <td style="width:100px;">
                                        <label>عنوان</label>
                                    </td>
                                    <td style="width:240px">
                                        <StringTextBox @bind-Value="UpsertData.Title" />
                                    </td>
                                    <td rowspan="6" style="padding-right:30px;">
                                        <Fileupload OnChange="async (e) =>
                                                              {
                                                                  UpsertData.Image = await e.File.GetByteArrayAsync();
                                                              }">
                                            <PictureBox Data="UpsertData.Image" style="width: 250px; height: 250px;" />
                                        </Fileupload>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label>قیمت</label>
                                    </td>
                                    <td>
                                        <NumericTextBox @bind-Value="UpsertData.Price"
                                                        OnChange="() =>
                                                                   {
                                                                       if (UpsertData.TakeoutPrice == 0)
                                                                           UpsertData.TakeoutPrice = UpsertData.Price;
                                                                   }" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label>قیمت بیرون بر</label>
                                    </td>
                                    <td>
                                        <NumericTextBox @bind-Value="UpsertData.TakeoutPrice" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label>وعده غذایی</label>
                                    </td>
                                    <td>
                                        <MultiSelectBox @bind-Value="UpsertData.Meal" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label>تخفیف پذیر</label>
                                    </td>
                                    <td>
                                        <CheckBox @bind-Value="UpsertData.Discountable" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label>وضعیت</label>
                                    </td>
                                    <td>
                                        <DropdownList @bind-Value="UpsertData.ActiveType" />
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2"></td>
                                    <td style="text-align:center">
                                        <FormCommandButton />
                                    </td>
                                </tr>
                            </table>

                        </CaspianForm>
                    </Content>
                </Window>
            </div>
        }    
    </div>

}

@code
{
    int? selectedId;
    IList<ProductCategory> categories;

    void SetCategory()
    {
        UpsertData.ProductCategoryId = selectedId.Value;
    }

    protected override Task<bool> BeforUpsertAsync(Product data)
    {
        if (UpsertData.Price == 0)
            return Confirm("آیا با ثبت محصول با مبلغ صفر موافقید؟");
        return base.BeforUpsertAsync(data);
    }

    protected override async Task OnInitializedAsync()
    {
        using var scope = ServiceScopeFactory.CreateScope();
        categories = await new ProductCategoryService(scope.ServiceProvider).GetAll().ToListAsync();
        await base.OnInitializedAsync();
    }
}


@page "/Demo/ComboxboxDisterbutedPage"
@namespace Demo.Web.Pages
@inherits SimplePage<Product>
@{
    base.BuildRenderTree(__builder);
}
<div style="width:90%;margin:0 auto">
    <div class="c-master">
        <table style="width:90%;margin:0 auto">
            <tr>
                <td style="width:100px">
                    <label>گروه غذا</label>
                </td>
                <td>
                    <ComboBox TValue="int?" TEntity="ProductCategory" @bind-Value="selectedCategoryId" TextExpression="t => t.Title" OrderByExpression="t => t.Title"
                              OnValueChanged="@(() =>
                         {
                             CrudGrid?.EnableLoading();
                         })" />
                </td>
            </tr>
        </table>
    </div>
    @if (selectedCategoryId.HasValue)
    {
        <div class="c-details">
            <DataGrid @ref="CrudGrid" TEntity="Product" ConditionExpr="@(t => t.ProductCategoryId == selectedCategoryId.Value)" Search="SearchData" TableHeight="400">
                <Columns>
                    <GridColumn TEntity="Product" Field="t => t.Title" />
                    <GridColumn TEntity="Product" Field="t => t.ActiveType.FaText()" />
                    <GridColumn TEntity="Product" Field="t => t.Price.Seprate3Digit()" />
                    <GridColumn TEntity="Product" Field="t => t.PriceOuterBound.Seprate3Digit()" />
                    <GridColumn TEntity="Product" Field="t => t.OutofStock.ToString()">
                        <Template>
                            <CheckBox TValue="bool" Value="context.Data.OutofStock" ValueChanged="async value =>
                                                                        {
                                                                            await ToggleOutofstock(context.Data.Id);
                                                                        }" />
                        </Template>
                    </GridColumn>
                    <GridCommandColumns TEntity="Product" />
                </Columns>
            </DataGrid>
            <Window @ref="UpsertWindow" Title="محصول" Style="width:500px">
                <Content>
                    <CaspianForm @ref="UpsertForm" Model="UpsertData" OnSubmit="SetCategory" OnValidSubmit="showConfirmForPrice">
                        <CaspianValidationValidator ValidatorType="typeof(ProductService)" />
                        <table style="width:90%;margin:0 auto">
                            <tr>
                                <td style="width:100px;">
                                    <label>عنوان</label>
                                </td>
                                <td>
                                    <StringTextBox @bind-Value="UpsertData.Title" />
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label>قیمت</label>
                                </td>
                                <td>
                                    <NumericTextBox @bind-Value="UpsertData.Price"
                                                    @onchange="@(() =>
                                                                 {
                                                                     if (UpsertData.PriceOuterBound == 0)
                                                                         UpsertData.PriceOuterBound = UpsertData.Price;
                                                                 })" />
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label>قیمت بیرون بر</label>
                                </td>
                                <td>
                                    <NumericTextBox @bind-Value="UpsertData.PriceOuterBound" />
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label>وضعیت</label>
                                </td>
                                <td>
                                    <DropdownList @bind-Value="UpsertData.ActiveType" />
                                </td>
                            </tr>
                            <tr>
                                <td colspan="2">
                                    <FormCommandButton />
                                </td>
                            </tr>
                        </table>
                    </CaspianForm>
                </Content>
            </Window>
        </div>
    }
</div>
@code
{
    int? selectedCategoryId;

    async Task ToggleOutofstock(int id)
    {
        using var scope = ServiceScopeFactory.CreateScope();
        var service = new ProductService(scope);
        await service.ToggleOutofstock(id);
        await service.SaveChangesAsync();
        await CrudGrid.Reload();
    }

    void SetCategory()
    {
        UpsertData.ProductCategoryId = selectedCategoryId.Value;
    }

    async Task<bool> showConfirmForPrice(EditContext context)
    {
        if (UpsertData.Price > 0 || (await Confirm("آیا با ثبت محصول با مبلغ صفر موافقید؟")))
            return true;
        return false;
    }
}

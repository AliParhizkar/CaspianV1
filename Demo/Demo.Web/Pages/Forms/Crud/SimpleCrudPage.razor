@page "/Demo/SimpleCrud"
@namespace Demo.Web
@inherits BasePage
@{
    base.BuildRenderTree(__builder);
}
<CrudComponent UpsertData="upsertData" Style="width:90%;margin:5px auto" BeforUpsert="ConfirmForPrice">
    <div class="row c-controls">
        <div class="col-md-3 ps-4">
            <label>Title</label>
        </div>
        <div class="col-md-6">
            <StringTextBox @bind-Value="searchData.Title" Search />
        </div>
        <div class="d-source-btn col-md-3">
            <button @onclick="() => status = WindowStatus.Open" class="c-btn c-primary">
                Source
                <i class="fa fa-code"></i>
            </button>
        </div>
    </div>
    <DataGrid Search="searchData">
        <Columns>
            <GridColumn Field="t => t.Title" />
            <GridColumn Field="t => t.Price.Seprate3Digit()" />
            <GridColumn Field="t => t.TakeoutPrice.Seprate3Digit()" />
            <GridColumn Field="t => t.ActiveType.EnumText()" />
            <GridCommandColumns />
        </Columns>
    </DataGrid>
    <Window Title="Product" Style="width:520px;">
        <Content>
            <CaspianForm Model="upsertData">
                <CaspianValidationValidator ValidatorType="typeof(ProductService)" />
                <div class="row c-controls ps-4 pe-4">
                    <div class="col-md-4">
                        <label>Product Category</label>
                    </div>
                    <div class="col-md-8">
                        <ComboBox TValue="int" TEntity="ProductCategory" @bind-Value="upsertData.ProductCategoryId" TextExpression="t => t.Title" />
                    </div>
                    <div class="col-md-4">
                        <label>Title</label>
                    </div>
                    <div class="col-md-8">
                        <StringTextBox @bind-Value="upsertData.Title" />
                    </div>
                    <div class="col-md-4">
                        <label>Price</label>
                    </div>
                    <div class="col-md-8">
                        <NumericTextBox @bind-Value="upsertData.Price" OnChange="@SetOuterPrice" />
                    </div>
                    <div class="col-md-4">
                        <label>Take out price</label>
                    </div>
                    <div class="col-md-8">
                        <NumericTextBox @bind-Value="upsertData.TakeoutPrice" />
                    </div>
                    <div class="col-md-4">
                        <label>Meal</label>
                    </div>
                    <div class="col-md-8">
                        <MultiSelectBox @bind-Value="upsertData.Meal" />
                    </div>
                    <div class="col-md-4">
                        <label>Status</label>
                    </div>
                    <div class="col-md-8">
                        <DropdownList @bind-Value="upsertData.ActiveType" />
                    </div>
                    <div class="col-md-4">
                        <label>Discountable</label>
                    </div>
                    <div class="col-md-8">
                        <CheckBox @bind-Value="upsertData.Discountable" />
                    </div>
                    <div class="col-md-4"></div>
                    <div class="col-md-8 text-center">
                        <WindowCommandButtons />
                    </div>
                </div>
            </CaspianForm>
        </Content>
    </Window>
</CrudComponent>

<CreatePdfComponent @bind-Status="status" Title="Crud-Simple" FileName="Crud-Simple.pdf" Title1="Service" FileName1="ProductService.pdf" Title2="Model" FileName2="ProductModel.pdf" />
@code
{
    WindowStatus status;
    Product searchData = new Product();
    Product upsertData = new Product();

    void SetOuterPrice()
    {
        if (upsertData.TakeoutPrice == 0)
            upsertData.TakeoutPrice = upsertData.Price;
    }

    async Task<bool> ConfirmForPrice()
    {
        if (upsertData.Price == 0)
            return await Confirm("Do you want to register the product with zero amount?");
        return true;
    }
}

@page "/Demo/SimpleCrud"
@namespace Demo.Web
@inherits BasePage
@inject SimpleService<Country> CountryService
@inject SimpleService<Product> ProductService
@{
    base.BuildRenderTree(__builder);
}
<h2>Simple crud</h2>
<p>
    We can create the <b>CRUD form without any code</b>, but we can <b>modify</b> it as needed. These changes can be divided into two parts:
</p>
<ul class="d-demo-list">
    <li>
        <b>Business rules: </b><span>We define all the business rule in the <b>service</b>, infrastructure automatically <b>injects</b> 
            all service and uses them for validation(on upsert and delete).We apply these in two way:</span>
        <ul class="d-demo-inner-list">
            <li>Define business rules on the constructor using fluent validation, and the methods we've extended to it.</li>
            <li>
                <b>Polymorphism: </b>We can override BaseService class methods (AddAsync, Remove, ...) and custom theme.
            </li>
        </ul>
    </li>
    <li>
        <b>User experience: </b>We define the user experience in the presentation layer, we do this in two ways:
        <ul class="d-demo-inner-list">
            <li><b>Events: </b>For all components we have defined events for customization, using these events we can create a proper UX.</li>
            <li>
                <b>Polymorphism: </b> We can override BasePage, SimplePage, ... class methods and custom theme.
            </li>
        </ul>
    </li>
</ul>
<h3>Business rules</h3>
<TabPanel>
    <Tabs>
        <TabPanelItem Title="<i class='fa fa-bar-chart'></i>Demo">
            <div class="ps-4 pe-4 pt-3 pb-3 row">
                <div class="col-md-5 pe-4 pt-4">
                    <span class="c-demo-description">
                        In this example we have created a CRUD form with some business rules, the business rules are defined in the service layer.
                    </span>
                </div>
                <div class="col-md-7">
                    <div class="row c-controls">
                        <div class="col-md-4 ps-4">
                            <label>Title</label>
                        </div>
                        <div class="col-md-8 pe-4">
                            <StringTextBox @bind-Value="CountryService.Search.Title" />
                        </div>
                    </div>
                    <DataGrid TEntity="Country" Service="CountryService">
                        <Columns>
                            <GridColumn Field="t => t.Title" />
                            <GridColumn Field="t => t.ActiveType.EnumText()" />
                            <GridCommandColumns />
                        </Columns>
                    </DataGrid>
                    <Window Service="CountryService" Title="Country" Style="width:450px;">
                        <CaspianForm Service="CountryService">
                            <div class="row c-controls ps-3 pe-3">
                                <div class="col-md-3">
                                    <label>Title</label>
                                </div>
                                <div class="col-md-9">
                                    <StringTextBox @bind-Value="CountryService.UpsertData.Title" />
                                </div>
                                <div class="col-md-3">
                                    <label>Status</label>
                                </div>
                                <div class="col-md-9">
                                    <DropdownList @bind-Value="CountryService.UpsertData.ActiveType" />
                                </div>
                                <div class="col-md-3"></div>
                                <div class="col-md-9 text-center">
                                    <WindowCommandButtons />
                                </div>
                            </div>
                        </CaspianForm>
                    </Window>
                </div>
            </div>
        </TabPanelItem>
        <TabPanelItem Title="<i class='fa fa-code'></i>Razor">
            <Document FolderName="Crud" FileName="BusinessRules" />
        </TabPanelItem>
        <TabPanelItem Title="<i class='fa fa-code'></i>Service">
            <Document FolderName="Service/Services" FileName="CountryService" />
        </TabPanelItem>
    </Tabs>
</TabPanel>
<h3 class="pt-3">User experience</h3>

<TabPanel>
    <Tabs>
        <TabPanelItem Title="<i class='fa fa-bar-chart'></i>Demo">
            <div class="ps-4 pe-4 pt-3 pb-3">
                <span class="c-demo-description">
                    In this example, in addition to business rules, we have also created two user experience:
                </span>
                <ul class="d-demo-inner-list">
                    <li>
                        <b>UX-1: </b> If the price of take out food is zero, when changing the price of food,
                        we make the price of take out food equal to the price of food.
                    </li>
                    <li>
                        <b>UX-2: </b> If the price is zero, we get confirmation from the user.
                    </li>
                </ul>
                <div class="d-content pt-1 pb-3">
                    <span class="fa fa-info">  Note:</span> 
                    <span class="c-demo-description">In this example we use the <b>OnUpsert</b> parameter, 
                        this is an <b>EventCallback</b>, we can use it's input parameter to <b>cancel the upsert</b>.
                    </span>
                </div>
                <div class="row c-controls">
                    <div class="col-md-3 ps-4">
                        <label>Title</label>
                    </div>
                    <div class="col-md-6">
                        <StringTextBox @bind-Value="ProductService.Search.Title" Search />
                    </div>
                </div>
                <DataGrid TEntity="Product" Service="ProductService">
                    <Columns>
                        <GridColumn Field="t => t.Title" />
                        <GridColumn Field="t => t.Price.Seprate3Digit()" />
                        <GridColumn Field="t => t.TakeoutPrice.Seprate3Digit()" />
                        <GridColumn Field="t => t.ActiveType.EnumText()" />
                        <GridCommandColumns />
                    </Columns>
                </DataGrid>
                <Window Service="ProductService" Title="Product" Style="width:650px;">
                    <CaspianForm Service="ProductService">
                        <div class="row c-controls ps-3 pe-3">
                            <div class="col-md-8">
                                <div class="row">
                                    <div class="col-md-4">
                                        <label>Product Category</label>
                                    </div>
                                    <div class="col-md-8">
                                        <ComboBox TEntity="ProductCategory" TValue="int" @bind-Value="ProductService.UpsertData.ProductCategoryId" TextExpression="t => t.Title" />
                                    </div>
                                    <div class="col-md-4">
                                        <label>Title</label>
                                    </div>
                                    <div class="col-md-8">
                                        <StringTextBox @bind-Value="ProductService.UpsertData.Title" />
                                    </div>
                                    <div class="col-md-4">
                                        <label>Price</label>
                                    </div>
                                    <div class="col-md-8">
                                        <NumericTextBox @bind-Value="ProductService.UpsertData.Price" OnChange="@SetOuterPrice" />
                                    </div>
                                    <div class="col-md-4">
                                        <label>Take out price</label>
                                    </div>
                                    <div class="col-md-8">
                                        <NumericTextBox @bind-Value="ProductService.UpsertData.TakeoutPrice" />
                                    </div>
                                    <div class="col-md-4">
                                        <label>Discount</label>
                                    </div>
                                    <div class="col-md-8">
                                        <NumericTextBox @bind-Value="ProductService.UpsertData.Discount" />
                                    </div>
                                    <div class="col-md-4">
                                        <label>Status</label>
                                    </div>
                                    <div class="col-md-8">
                                        <DropdownList @bind-Value="ProductService.UpsertData.ActiveType" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4 ps-3 row">
                                <Fileupload OnChange="SetImage">
                                    <PictureBox Data="ProductService.UpsertData.Image" style="width:200px;height:200px" />
                                </Fileupload>
                                <div class="col-md-8 ps-3">
                                    <label>Discountable</label>
                                </div>
                                <div class="col-md-4">
                                    <CheckBox @bind-Value="ProductService.UpsertData.Discountable" />
                                </div>
                            </div>
                            <div class="col-md-3">
                                <label>Meal</label>
                            </div>
                            <div class="col-md-9">
                                <MultiSelectBox @bind-Value="ProductService.UpsertData.Meal" />
                            </div>
                            <div class="col-md-4"></div>
                            <div class="col-md-8 text-center">
                                <WindowCommandButtons />
                            </div>
                        </div>
                    </CaspianForm>
                </Window>
            </div>
        </TabPanelItem>
        <TabPanelItem Title="<i class='fa fa-code'></i>Razor">
            <Document FolderName="Crud" FileName="UserExperience" />
        </TabPanelItem>
        <TabPanelItem Title="<i class='fa fa-code'></i>Service">
            <Document FolderName="Service/Services" FileName="ProductService" />
        </TabPanelItem>
    </Tabs>
</TabPanel> 
<p class="mt-3">
    In the example above, we have used file upload and picturebox. We set the <b>Image content</b> 
    with the <b>SetImage method,</b> using the OnChange parameter of the file upload.
</p>
@code
{
    protected override void OnInitialized()
    {
        ProductService.OnUpsert = async t => (t.Price > 0 && t.TakeoutPrice > 0) || await base.Confirm("آیا با ثبت محصول با قیمت صفر موافقید؟");
        base.OnInitialized();
    }

    async Task SetImage(InputFileChangeEventArgs e)
    {
        using var service = CreateScope().GetService<ProductService>();

        ProductService.UpsertData.Image = await e.File.GetByteArrayAsync();
    }

    void SetOuterPrice()
    {
        if (ProductService.UpsertData.TakeoutPrice == 0)
            ProductService.UpsertData.TakeoutPrice = ProductService.UpsertData.Price;
    }
}

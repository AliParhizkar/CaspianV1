@page "/Demo/MultipleCrud"
@namespace Demo.Web
@inherits BasePage
@{
    base.BuildRenderTree(__builder);
}
<h2>Multiple CRUD on page</h2>
<p>
    In this example we create two CRUDs on the page (product category and product) these entities are the master-details.
</p>
<TabPanel>
    <Tabs>
        <TabPanelItem Title="<i class='fa fa-bar-chart'></i>Demo">
            <div class="p-3">
                <div class="d-content">
                    <span class="c-demo-description">
                        When selecting a row of product category grid, the CRUD of the product is displayed. 
                        We use the ShowProductGrid method for this, it sets the productcategoryId field to filter the product grid and reloads the product grid.
                    </span>
                </div>
                <CrudComponent UpsertData="upsertCategory">
                    <div class="row c-controls">
                        <div class="col-md-3 ps-4">
                            <label>Title</label>
                        </div>
                        <div class="col-md-9 pe-4">
                            <StringTextBox @bind-Value="SearchCategory.Title" Search />
                        </div>
                    </div>
                     <DataGrid TEntity="ProductCategory" Search="SearchCategory" ContentHeight="208" OnRowSelect="ShowProductGrid">
                        <Columns>
                            <GridColumn Field="t => t.Title" />
                            <GridColumn Field="t => t.ActiveType.EnumText()" />
                            <GridCommandColumns />
                        </Columns>
                    </DataGrid>
                    <Window Title="Product Category" Style="width:500px">
                        <Content>
                            <CaspianForm Model="upsertCategory">
                                <div class="row c-controls ps-4 pe-4 pt-3 pb-2">
                                    <div class="col-md-4">
                                        <label>Title</label>
                                    </div>
                                    <div class="col-md-8">
                                        <StringTextBox @bind-Value="upsertCategory.Title" />
                                    </div>
                                    <div class="col-md-4">
                                        <label>Status</label>
                                    </div>
                                    <div class="col-md-8">
                                        <DropdownList @bind-Value="upsertCategory.ActiveType" />
                                    </div>
                                    <div class="col-md-4"></div>
                                    <div class="col-md-8">
                                        <WindowCommandButtons />
                                    </div>
                                </div>
                            </CaspianForm>
                        </Content>
                    </Window>
                </CrudComponent>
                @if (productcategoryId.HasValue)
                {
                    <CrudComponent TEntity="Product" UpsertData="upsertProduct">
                        <div class="c-continner-head">
                            <span>@productTitle</span>
                        </div>
                        <ul class="d-demo-list m-4 ">
                            <li>
                                We set the ConditionExpr parameter to filter the product grid.
                            </li>
                            <li>
                                We set OnSubmit parameter to set CategoryId property of upsertProduct field.
                            </li>
                        </ul>

                        <div class="row c-controls">
                            <div class="col-md-3 ps-4">
                                <label>Title</label>
                            </div>
                            <div class="col-md-9 pe-4">
                                <StringTextBox @bind-Value="SearchProduct.Title" Search />
                            </div>
                        </div>
                         <DataGrid @ref="productGrid" TEntity="Product" Search="SearchProduct" ContentHeight="206" ConditionExpr="t => t.ProductCategoryId == productcategoryId">
                            <Columns>
                                <GridColumn Field="t => t.Title" />
                                <GridColumn Field="t => t.Price.Seprate3Digit()" />
                                <GridColumn Field="t => t.TakeoutPrice.Seprate3Digit()" />
                                <GridColumn Field="t => t.Code" />
                                <GridColumn Field="t => t.ActiveType.EnumText()" />
                                <GridCommandColumns />
                            </Columns>
                        </DataGrid>
                        <Window Title="Product" Style="width:650px">
                            <Content>
                                <CaspianForm Model="upsertProduct" OnSubmit="SetCategory">
                                    <div class="row c-controls pb-3">
                                        <div class="col-md-7">
                                            <div class="row">
                                                 <div class="col-md-4">
                                                     <label>Title</label>
                                                 </div>
                                                 <div class="col-md-8">
                                                     <StringTextBox @bind-Value="upsertProduct.Title" />
                                                 </div>
                                                 <div class="col-md-4">
                                                     <label>Price</label>
                                                 </div>
                                                 <div class="col-md-8">
                                                     <NumericTextBox @bind-Value="upsertProduct.Price" />
                                                 </div>
                                                 <div class="col-md-4">
                                                     <label>Take out Price</label>
                                                 </div>
                                                 <div class="col-md-8">
                                                     <NumericTextBox @bind-Value="upsertProduct.TakeoutPrice" />
                                                 </div>
                                                 <div class="col-md-4">
                                                     <label>Meal</label>
                                                 </div>
                                                 <div class="col-md-8">
                                                     <MultiSelectBox @bind-Value="upsertProduct.Meal" />
                                                 </div>
                                                 <div class="col-md-4">
                                                     <label>Code</label>
                                                 </div>
                                                 <div class="col-md-8">
                                                     <NumericTextBox @bind-Value="upsertProduct.Code" />
                                                 </div>
                                                 <div class="col-md-4">
                                                     <label>Status</label>
                                                 </div>
                                                 <div class="col-md-8">
                                                     <DropdownList @bind-Value="upsertProduct.ActiveType" />
                                                 </div>
                                                 <div class="col-md-4">
                                                     <label>Discountable</label>
                                                 </div>
                                                 <div class="col-md-8">
                                                     <CheckBox @bind-Value="upsertProduct.Discountable" />
                                                 </div>
                                            </div>
                                        </div>
                                        <div class="col-md-5 ps-4">
                                             <div class="col-md-12 justify-content-center d-flex">
                                                 <Fileupload OnChange="SetImage">
                                                     <PictureBox Data="upsertProduct.Image" style="width:200px;height:200px" />
                                                 </Fileupload>
                                            </div>
                                             <div class="justify-content-center d-flex pt-2">
                                                 <WindowCommandButtons />
                                             </div>
                                        </div>

                                    </div>
                                </CaspianForm>
                            </Content>
                        </Window>
                    </CrudComponent>
                }
                else
                {
                    <div class="text-center p-5 c-continner-head">
                        <span>
                            Please select a category to display its products
                        </span>
                    </div>
                }
            </div>
        </TabPanelItem>
        <TabPanelItem Title="<i class='fa fa-code'></i>Razor">
            <Document FolderName="Crud" FileName="MultipleCrud" />
        </TabPanelItem>
    </Tabs>
</TabPanel>

@code 
{
    string productTitle;
    DataGrid<Product> productGrid;
    ProductCategory upsertCategory = new ProductCategory();
    ProductCategory SearchCategory = new ProductCategory();

    Product upsertProduct = new Product();
    Product SearchProduct = new Product();

    int? productcategoryId;

    void SetCategory()
    {
        upsertProduct.ProductCategoryId = productcategoryId.Value;
    }

    async Task SetImage(InputFileChangeEventArgs e)
    {
        upsertProduct.Image = await e.File.GetByteArrayAsync();
    }

    async void ShowProductGrid(ProductCategory category)
    {
        productcategoryId = category.Id;
        productTitle = category.Title;
        await Task.Delay(1);
        await productGrid.ReloadAsync();
    }
}

@page "/Demo/MultiCrudPage"
@namespace Demo.Web
@inherits BasePage
@{
    base.BuildRenderTree(__builder);
}

<CrudComponent UpsertData="upsertCategory" Style="width:90%;margin:5px auto">
    <table style="width:100%">
        <tr>
            <td>
                <label>عنوان</label>
            </td>
            <td>
                <StringTextBox @bind-Value="SearchCategory.Title" Search />
            </td>
        </tr>
    </table>
    <DataGrid TEntity="ProductCategory" Search="SearchCategory" TableHeight="206" OnRowSelect="ProductCategorySelected">
        <Columns>
            <GridColumn Field="t => t.Title" />
            <GridColumn Field="t => t.ActiveType.FaText()" />
            <GridCommandColumns />
        </Columns>
    </DataGrid>
    <Window Title="نوع محصول" Style="width:500px">
        <Content>
            <CaspianForm Model="upsertCategory">
                <CaspianValidationValidator ValidatorType="typeof(ProductCategoryService)" />
                <table style="width:95%;margin:0 auto">
                    <tr>
                        <td>
                            <label>عنوان</label>
                        </td>
                        <td>
                            <StringTextBox @bind-Value="upsertCategory.Title" />
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>وضعیت</label>
                        </td>
                        <td>
                            <DropdownList @bind-Value="upsertCategory.ActiveType" />
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td style="text-align:center">
                            <WindowCommandButtons />
                        </td>
                    </tr>
                </table>
            </CaspianForm>
        </Content>
    </Window>
</CrudComponent>

@if (productcategoryId.HasValue)
{
    <CrudComponent UpsertData="upsertProduct" Style="width:90%;margin:5px auto" BeforUpsert="ConfirmForPrice">
        <div class="c-continner-head">
            <span>@productTitle</span>
        </div>
        <table style="width:100%">
            <tr>
                <td>
                    <label>عنوان</label>
                </td>
                <td>
                    <StringTextBox @bind-Value="SearchProduct.Title" Search />
                </td>
            </tr>
        </table>
        <DataGrid @ref="grid" TEntity="Product" Search="SearchProduct" TableHeight="206" ConditionExpr="t => t.ProductCategoryId == productcategoryId">
            <Columns>
                <GridColumn Field="t => t.Title" />
                <GridColumn Field="t => t.Price.Seprate3Digit()" />
                <GridColumn Field="t => t.PriceOuterBound.Seprate3Digit()" />
                <GridColumn Field="t => t.ActiveType.FaText()" />
                <GridCommandColumns />
            </Columns>
        </DataGrid>
        <Window Title="محصول" Style="width:500px">
            <Content>
                <CaspianForm Model="upsertProduct">
                    <CaspianValidationValidator ValidatorType="typeof(ProductService)" />
                    <table style="width:95%;margin:0 auto">
                        <tr>
                            <td>
                                <label>عنوان</label>
                            </td>
                            <td>
                                <StringTextBox @bind-Value="upsertProduct.Title" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>قیمت</label>
                            </td>
                            <td>
                                <NumericTextBox @bind-Value="upsertProduct.Price"
                                            OnChange="@(() =>
                                                                 {
                                                                     if (upsertProduct.PriceOuterBound == 0)
                                                                         upsertProduct.PriceOuterBound = upsertProduct.Price;
                                                                 })" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>قیمت بیرون بر</label>
                            </td>
                            <td>
                                <NumericTextBox @bind-Value="upsertProduct.PriceOuterBound" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>وعده های غذایی</label>
                            </td>
                            <td>
                                <MultiSelectBox @bind-Value="upsertProduct.Meal" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>وضعیت</label>
                            </td>
                            <td>
                                <DropdownList @bind-Value="upsertProduct.ActiveType" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label>تخفیف پذیر</label>
                            </td>
                            <td>
                                <CheckBox @bind-Value="upsertProduct.Discountable" />
                            </td>
                        </tr>
                        <tr>
                            <td></td>
                            <td style="text-align:center">
                                <WindowCommandButtons />
                            </td>
                        </tr>
                    </table>
                </CaspianForm>
            </Content>
        </Window>
    </CrudComponent>
}


@code 
{
    string productTitle;
    DataGrid<Product> grid;
    ProductCategory upsertCategory = new ProductCategory();
    ProductCategory SearchCategory = new ProductCategory();

    Product upsertProduct = new Product();
    Product SearchProduct = new Product();

    int? productcategoryId;

    async void ProductCategorySelected(ProductCategory category)
    {
        productcategoryId = category.Id;
        productTitle = category.Title;
        await Task.Delay(1);
        grid.EnableLoading();
    }

    async Task<bool> ConfirmForPrice()
    {
        if (upsertProduct.Price == 0)
            return await Confirm("آیا با ثبت محصول با مبلغ صفر موافقید؟");
        return true;
    }
}

@typeparam TValue
@inherits LookupPage<Customer, TValue>
@namespace Demo.Web.Pages
<div class="c-lookup-page" style="width:580px;">
    @if (UseParameter)
    {
        <div class="row">
            <div class="col-md-2">
                <label>Person Type</label>
            </div>
            <div class="col-md-4">
                <DropdownList @bind-Value="CustomerType" OnChange="() => Grid.EnableLoading()" />
            </div>
            <div class="col-md-2">
                <label>Gender</label>
            </div>
            <div class="col-md-4">
                <DropdownList @bind-Value="Gender" OnChange="() => Grid.EnableLoading()" />
            </div>
        </div>
    }
    <DataGrid @ref="Grid" TEntity="Customer" Search="SearchData" TableHeight="200" HidePageSize>
        <Columns Context="customer">
            <GridColumn Field="t => t.CustomerType" Title="Customer Type" />
            <GridColumn Field='t => t.CustomerType == Model.CustomerType.Real ? t.FName + " " + t.LName : t.CompanyName' Title="Customer Name" />
            <GridColumn Field="t => t.Gender" style="width:100px" Title="Gender">
                <Template>
                    @if (customer.Data.Gender == Model.Gender.Male)
                    {
                        <span class="c-icon fa fa-male"></span>
                    }
                    else if (customer.Data.Gender == Model.Gender.Female)
                    {
                        <span class="c-icon fa fa-female"></span>
                    }
                </Template>
            </GridColumn>
            <GridColumn Field="t => t.MobileNumber.CallSeprator('-')" Title="Mobile Number" />
        </Columns>
    </DataGrid>
</div>


@code 
{
    [Parameter]
    public bool UseParameter { get; set; }

    [Parameter]
    public Gender? Gender { get; set; }

    [Parameter]
    public CustomerType? CustomerType{ get; set; }

    protected override void OnInitialized()
    {
        InitialSearchExpression(t => LookupStringSearchValue == null || t.FName.Contains(LookupStringSearchValue) || t.LName.Contains(LookupStringSearchValue) || t.MobileNumber.Contains(LookupStringSearchValue));
        InitialTextExpression(t => t.CustomerType == Model.CustomerType.Real ? t.FName + " " + t.LName : t.CompanyName);
        base.OnInitialized();
    }
}

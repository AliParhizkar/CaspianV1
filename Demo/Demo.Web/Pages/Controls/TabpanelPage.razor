@page "/Demo/TabPanel"
@namespace Demo.Web.Pages
<div style="width:90%;margin:50px auto">
    <TabPanel @bind-TabIndex="simpleTabIndex">
        <Tabs>
            <TabPanelItem Title='<i class="fa fa-code"></i>Identity information'>
                <span>Identity information</span>
            </TabPanelItem>
            <TabPanelItem Title="Job specification">
                <span>job specification</span>
            </TabPanelItem>
            <TabPanelItem Title="Children's profile">
                <span>Children's profile</span>
            </TabPanelItem>
        </Tabs>
    </TabPanel>
</div>

<div class="row d-head">
    <div class="col-md-6">
        <h3>TabPanel</h3>
    </div>
    <div class="d-source-btn col-md-6">
        <button @onclick="() => status = WindowStatus.Open" class="c-btn c-primary">
            Source
            <i class="fa fa-code"></i>
        </button>
    </div>
</div>
<div class="d-head">
    <div class="row">
        <div class="col-md-6 d-control">
            <hr />
            <div class="d-container">
                <h4>Simple</h4>
                <div class="row">
                    <div class="col-md-12">

                    </div>
                </div>
            </div>
        </div>
        <div class="">
            <hr />
            <div class="d-container">
                <h4>Dynamic Items</h4>
                <div class="row">
                    <div class="col-md-12 d-tabpanel-container">
                        <CheckBox Value="dic.ContainsKey(1)" TValue="bool" ValueChanged="@(t => { UpateList(t, 1, "Identity"); })" Title="Identity" />
                        <CheckBox Value="dic.ContainsKey(2)" TValue="bool" ValueChanged="@(t => { UpateList(t, 2, "Job specification"); })" Title="Job" />
                        <CheckBox Value="dic.ContainsKey(3)" TValue="bool" ValueChanged="@(t => { UpateList(t, 3, "Wife's profile"); })" Title="Wife" />
                        <CheckBox Value="dic.ContainsKey(4)" TValue="bool" ValueChanged="@(t => { UpateList(t, 4, "Home Address"); })" Title="Home" />
                    </div>
                    @if (dic.Any())
                    {
                        if (tabIndex > dic.Count)
                            tabIndex = dic.Count;
                        <div class="col-md-12 d-tabpanel-container">
                            <RadioList TValue="int" Value="dic.ToArray()[tabIndex - 1].Key" ValueChanged="t => { tabIndex = dic.Select(t => t.Key).ToList().IndexOf(t) + 1; }">
                                <RadioItems>
                                    <RadioItem Value="1" Title="Identity" />
                                    <RadioItem Value="2" Title="Job" />
                                    <RadioItem Value="3" Title="Wife" />
                                    <RadioItem Value="4" Title="Home" />
                                </RadioItems>
                            </RadioList>
                        </div>
                        <div class="col-md-12">
                            <TabPanel @bind-TabIndex="tabIndex">
                                <Tabs>
                                    @foreach (var item in dic)
                                    {
                                        <TabPanelItem Title="@(item.Value)">
                                            <span>@(item.Value)</span>
                                        </TabPanelItem>
                                    }
                                </Tabs>
                            </TabPanel>
                        </div>
                    }
                    else
                    {
                        <span class="d-panel-message">Please select at least one item to display</span>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<CreatePdfComponent @bind-Status="status" Title="TabPanel" FileName="TabPanel.pdf" />

@code
{
    WindowStatus status;
    int selectedId = 1, tabIndex = 1, simpleTabIndex = 1;
    IDictionary<int, string> dic = new Dictionary<int, string>();

    protected override void OnInitialized()
    {
        dic.Add(1, "Identity");
        dic.Add(2, "Job specification");
        dic.Add(3, "Wife's profile");
        dic.Add(4, "Home Address");
        base.OnInitialized();
    }

    void UpateList(bool flag, int value, string title)
    {
        if (flag)
            dic.Add(value, title);
        else
            dic.Remove(value);
    }
}

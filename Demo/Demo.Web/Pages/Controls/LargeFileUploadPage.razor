@page "/Demo/LargeFileUpload"
@inject IHostEnvironment host
@inject FileUploadService service
@namespace Demo.Web.Pages
<div class="row d-head">
    <div class="col-md-6">
        <h3>Large File Upload</h3>
    </div>
    <div class="col-md-6 text-center">
        <button @onclick="() => pdfStatus = WindowStatus.Open" class="c-btn c-primary">
            Source
            <i class="fa fa-code"></i>
        </button>
    </div>
</div>
<div class="row">
    <div class="col-md-6 d-control">
        <hr />
        <div class="d-container">
            <h4>Single File</h4>
            <div class="row">
                <div class="col-md-6">
                    <label>Maximum size of file</label>
                </div>
                <div class="col-md-6">
                    <DropdownList @bind-Value="fileSize" Source="@(SelectListItem.CreateList(filesSize.Select(t => t + "M").ToArray()))" />
                </div>
                <div class="col-md-6">
                    <label>Fileupload</label>
                </div>
                <div class="col-md-6 text-center">
                    <Fileupload Service="service" OnChange="ShowProrgres" OnFileUploadCompleted="FileUploadCompleted"
                                MaxAllowedSize="Convert.ToInt32(filesSize[fileSize - 1] * 1000_000)" RelatedPath="@relatedPath" />

                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6 d-control">
        <hr />
        <div class="d-container">
            <h4>Multiple Files</h4>
            <div class="row">
                <div class="col-md-6">
                    <label>Maximum size of files</label>
                </div>
                <div class="col-md-6">
                    <DropdownList @bind-Value="fileSize1" Source="@(SelectListItem.CreateList(filesSize.Select(t => t + "M").ToArray()))" />
                </div>
                <div class="col-md-6">
                    <label>Maximum numer of files file</label>
                </div>
                <div class="col-md-6">
                    <DropdownList @bind-Value="fileCount" Source="@(SelectListItem.CreateList("Two", "Three", "Five", "Eight", "Ten"))" />
                </div>
                <div class="col-md-6">
                    <label>Fileupload</label>
                </div>
                <div class="text-center col-md-6">
                    <Fileupload Service="service" MaxFilesCount="Convert.ToInt32(fileCounts[fileCount - 1])"
                                MaxAllowedSize="Convert.ToInt32(filesSize[fileSize1 - 1] * 1000_000)" OnChange="ShowProrgres"
                                Multiple RelatedPath="@relatedPath" OnFilesUploadCompleted="FileUploadCompleted" />

                </div>
            </div>
        </div>
    </div>
</div>

<PopupWindow @bind-Status="status" AutoHide="enableAutoHide">
    <FileUploadProgress Service="service" Style="width:450px;" />
</PopupWindow>
<CreatePdfComponent @bind-Status="pdfStatus" Title="Large File Upload" FileName="LargeFileUpload.pdf" />
@code 
{
    WindowStatus pdfStatus;
    int fileSize = 1;
    int fileSize1 = 1;
    int fileCount = 1;
    WindowStatus status;
    bool enableAutoHide;
    double[] filesSize = new double[] { 0.5, 1, 2, 3, 5, 8, 10, 15, 30, 50 };
    int[] fileCounts = new int[] { 2, 3, 5, 8, 10 };
    string relatedPath;

    protected override void OnInitialized()
    {
        if (host.IsProduction())
            relatedPath = host.ContentRootPath + "\\Data";
        else
            relatedPath = "F://Data";
        base.OnInitialized();
    }

    void ShowProrgres(InputFileChangeEventArgs e)
    {
        enableAutoHide = false;
        status = WindowStatus.Open;
    }

    void FileUploadCompleted()
    {
        enableAutoHide = true;
    }
}

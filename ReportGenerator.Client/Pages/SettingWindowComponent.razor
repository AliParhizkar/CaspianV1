@namespace Caspian.Report
@using Caspian.UI
@inject IJSRuntime jSRuntime

<div class="p-2 row c-controls">
    <div class="col-md-4">
        <label>Page size</label>
    </div>
    <div class="col-md-8">
        <DropdownList @bind-Value="Setting.PageType" OnChange="SetPageSize" />
    </div>
    <div class="col-md-4">
        <label>Page width</label>
    </div>
    <div class="col-md-8">
        <NumericTextBox @bind-Value="Setting.PageWidth" Disabled="Setting.PageType != ReportPageType.Custome" />
    </div>
    <div class="col-md-4">
        <label>Page height</label>
    </div>
    <div class="col-md-8">
        <NumericTextBox @bind-Value="Setting.PageHeight" Disabled="Setting.PageType != ReportPageType.Custome" />
    </div>
    @if (!IsWorkflowReport)
    {
        <div class="col-md-4">
            <label>Print type</label>
        </div>
        <div class="col-md-8">
            <DropdownList @bind-Value="Setting.PrintOn" />
        </div>
        <div class="col-md-4">
            <label>Report title</label>
        </div>
        <div class="col-md-8">
            <CheckBox @bind-Value="Setting.ReportTitle" />
        </div>
        <div class="col-md-4">
            <label>Page header</label>
        </div>
        <div class="col-md-8">
            <CheckBox @bind-Value="Setting.PageHeader" />
        </div>
        <div class="col-md-4">
            <label>Data header</label>
        </div>
        <div class="col-md-8">
            <CheckBox @bind-Value="Setting.DataHeader" />
        </div>
        <div class="col-md-4">
            <label>Data footer</label>
        </div>
        <div class="col-md-8">
            <CheckBox @bind-Value="Setting.DataFooter" />
        </div>
        <div class="col-md-4">
            <label>Page footer</label>
        </div>
        <div class="col-md-8">
            <CheckBox @bind-Value="Setting.PageFooter" />
        </div>
    }
    <div class="col-md-4"></div>
    <div class="col-md-8 justify-content-center d-flex pt-3 pb-2">
        <button style="width:70px;" @onclick="async () => await StatusChanged.InvokeAsync(WindowStatus.Close)" class="c-btn c-danger">Cancel</button>
        <button style="width:70px;" @onclick="SetPageSetting" class="c-btn c-primary">Save</button>
    </div>
</div>

@code
{
    string message;

    [Parameter]
    public ReportSetting Setting { get; set; }

    [Parameter]
    public bool IsWorkflowReport{ get; set; }

    [Parameter]
    public WindowStatus Status { get; set; }

    [Parameter]
    public EventCallback<WindowStatus> StatusChanged { get; set; }

    async Task SetPageSetting()
    {
        if (Setting.PageType.GetValueOrDefault() == 0 || Setting.PageType.Value == ReportPageType.Custome && (Setting.PageWidth <= 0 || Setting.PageHeight <= 0))
            message = "لطفا اندازه صفحه را مشخص نمایید";
        else
            await StatusChanged.InvokeAsync(WindowStatus.Close);
    }

    void SetPageSize()
    {
        if (Setting.PageType.HasValue)
        {
            var size = Setting.PageSetting(Setting.PageType.Value);
            Setting.PageWidth = size.PageWidth;
            Setting.PageHeight = size.PageHeight;
        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (message != null)
        {
            await jSRuntime.InvokeVoidAsync("$.caspian.showMessage", message);
            message = null;
        }
        await base.OnInitializedAsync();
    }

}

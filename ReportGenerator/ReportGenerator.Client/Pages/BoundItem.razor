@namespace Caspian.Report
@using Caspian.Common

@code 
{
    int Top { get{ return Bound.GetTopBounnd(Data.BondType); } }

    int Bottom { get{ return Top + Data.Height; } }

    Table table;

    [Parameter]
    public Bound Bound { get; set; }

    [Parameter]
    public BoundItemData Data { get; set; }


    // void CreateDataBond(RenderTreeBuilder __builder, int level, int colSpan, double height, string title, BondType? bondType)
    // {
    //     string className = "dataBond", id = bondType == BondType.DataHeader ? "dataHeader" : "dataFooter";
    //     if (Bound.d.DataLevel > 1)
    //         className += " data-bond-second";
    //     if (level == 3)
    //         className += "-2";
    //     if (bondType == null)
    //     {
    //         id = $"databond{level}";
    //         if (level == 1)
    //             bondType = BondType.FirstDataLevel;
    //         else if (level == 2)
    //             bondType = BondType.SecondDataLevel;
    //         else
    //             bondType = BondType.ThirdDataLevel;
    //     }

    //     <tr>
    //         @for (var index = 2; index <= level; index++)
    //         {
    //             <td class="dataBond data-bond-first"></td>
    //         }
    //         <td colspan="@(colSpan)" class="@className">@(title)</td>
    //         <td @ondblclick="() => Page.OpenColumnWindow()" id="@(id)" style="@($"height:{height}px;width:{Width}px")" class="bond"
    //             @onmouseup="() => SelectBond(bondType.Value)">
    //             @if (columnCount > 1)
    //             {
    //                 for (var i = 1; i <= columnCount; i++)
    //                 {
    //                     className = "column ";
    //                     if (i == 1)
    //                         className += "left";
    //                     else if (i == columnCount)
    //                         className += "right";
    //                     else
    //                         className += "middel";
    //                     var style = $"width:{ColumnWidth}px;";
    //                     if (i < columnCount)
    //                         style += $"margin-right:{columnGap}px;";
    //                     <div class="@className" style="@style">
    //                         @if (i == 1)
    //                         {
    //                             CreateControlsAndTable(__builder, bondType);
    //                         }
    //                     </div>
    //                 }
    //             }
    //             else
    //             {
    //                 CreateControlsAndTable(__builder, bondType);
    //             }

    //             @if (bondType == selectedBond)
    //             {
    //                 CreateSqures(__builder, bondType.Value, id);
    //             }
    //         </td>
    //     </tr>
    //     <tr style="height:3px">
    //         <td colspan="@(bond.DataLevel)" class="dataBond">
    //             <hr style="width:130px;margin:1px auto 0 auto">
    //         </td>
    //         <td class="spliter"></td>
    //     </tr>
    // }

    void CreateControlsAndTable(RenderTreeBuilder __builder)
    {
        @foreach (var control in Data.ControlsData)
        {
            <ReportControl Data="control" Page="Bound.Page" />
        }

        @if (Data.TableData != null)
        {
            <Table @ref="table" Bound="Bound" Data="Data.TableData" />
        }
    }

    void CreateSqures(RenderTreeBuilder __builder, string id)
    {
        if (this == Bound.SelectedBond)
        {
            <span style="@($"left:{Bound.Left - 3}px;top:{Top - 3}px")" class="squarebond"></span>
            <span style="@($"left:{Bound.Right - 3}px;top:{Top - 3}px")" class="squarebond"></span>
            <span style="@($"left:{Bound.Left - 3}px;top:{Bottom}px")" class="squarebond"></span>
            <span style="@($"left:{Bound.Right - 3}px;top:{Bottom}px")" class="squarebond"></span>
        }
    }
}
